# Copyright (c) 2024 Akarsh Simha <akarsh@kde.org>
# SPDX-License-Identifier: MIT
import re
from collections import OrderedDict

CATALOG_REGEXES = [ # FIXME: Handle `ESO 456-SC38` / `ESO 597-G36`
    r'\b(?:NGC|IC|UGC) ?[0-9]+ ??[A-Za-z]?\b', # ABCs
    r'\b(?:VV|Hickson|HCG|KTG|KPG) ?[0-9]+?[A-Za-z]?\b', # Components
    r'\bESO ?[0-9]+-(?:SC|G|N)?[0-9]+\b', # ESO
    r'\b(?:K|PK|PNG|CGCG|MCG|IRAS)[+\- ][0-9\.+\-]+\b', # Hyphenated / Coordinate-based
    r'\b(?:MCG)[+\- ][0-9\.+\-]+[A-Fa-f]?\b', # Hyphenated / Coordinate-based, MCG allows a/b/c
    r'\b(?:2MASS|2MASSX|SDSS|RCS|RCS2) J?[0-9\.]+[+-][0-9\.]+\b', # J2000 based
    r'\b[VIX]+ Zw [0-9]+\b', # Zwicky
    r'\b(?:Simeis|Sharpless|Sim|Cr|Collinder|Cederblad|Ced|HD|SAO|HIP|vdB|Mrk|Mailyan|VV|Trumpler|Tr|Arp|Abell|PN A66|ACO|AGC|PGC|LEDA|B|Barnard|HH|Messier|Rose) ?[0-9]+\b', # Simple catalogs
    r'\bRCG ?[0-9]{4}\b', # Another name for ACO? But could stand for Rose compact group, which is why we enforce 4-digits
    r'\bSh ?2[ -][0-9]+\b', # Sharpless
    r'\b(?:M|Min|Minkowski) [0-9]-[0-9]+\b', # Minkowksi
    r'\b(?:Pal|Palomar|Terzan) [0-9]{1,2}\b', # Palomar and Terzan
    r'\bM ?[0-9]{1,3}\b(?! *(?:[Ww]rench|[Bb]olt|[nN]ut|[tT]hread|[Ss]panner|[hH]ex|[aA]ll[ae]n)(?:[^-]+|$))', # Messier (and not referring to metric hardware)
]
OBJECT_REGEX = '(' + '|'.join(['(?:' + regex + ')' for regex in CATALOG_REGEXES]) + ')' # Matches an object designation in a capture group
COMPILED_OBJECT_REGEX = re.compile(OBJECT_REGEX)
MULTILINE_OBJECT_REGEX = re.compile(OBJECT_REGEX, re.MULTILINE)
REPLACEMENT_REGEX = r'<x-dso[^>]*>(?:(?!</x-dso>|</x-dso-link>).)*</x-dso(?:-link)?>|(?:= *)?' + OBJECT_REGEX # Matches any object designation that is not preceded by '=', '= ' or is placed immediately after an <x-dso> or <x-dso-link> tag
COMPILED_REPLACEMENT_REGEX = re.compile(REPLACEMENT_REGEX)

SIMBAD_OTYPE = {
    'GinPair': 'Galaxy in a Pair',
    'GlCl': 'Globular Cluster',
    'OpCl': 'Open Cluster',
    'HII': 'HII Region',
    'HIIReg': 'HII Region',
    'RfNeb': 'Reflection Nebula',
    'RefNeb': 'Reflection Nebula',
    'GinGroup': 'Galaxy in a Group',
    'Seyfert_2': 'Seyfert 2 Galaxy',
    'Seyfert_1': 'Seyfert 1 Galaxy',
    'Seyfert': 'Seyfert Galaxy',
    'LINER': 'Active Galaxy (LINER)',
    'IG': 'Interacting Galaxies',
    'InteractingG': 'Interacting Galaxies',
    'EmissionG': 'Emission-line Galaxy',
    'G': 'Galaxy',
    'Galaxy': 'Galaxy',
    'HII_G': 'HII Galaxy',
    'HIIG': 'HII Galaxy',
    'BLLac': 'Active Galaxy (BL Lac)',
    'PairG': 'pair of galaxies',
    'ClG': 'cluster of galaxies',
    'BClG': 'Brightest galaxy in a Cluster',
    'Compact_Gr_G': 'Compact Group of Galaxies',
    'DkNeb': 'Dark Nebula',
    'DarkNeb': 'Dark Nebula',
    'Cl*': 'Open Cluster',
    'PN': 'Planetary Nebula',
    'HH': 'Herbig-Haro Object',
    'QSO': 'Quasar',
    'post-AGB*': 'Post-AGB Star / Proto-Planetary Nebula',
    'SNR': 'Supernova Remnant',
    'WolfRayet*': 'Wolf-Rayet Star',
    'SNRemnant': 'Supernova Remnant',
    'LSB_G': 'Low–Surface Brightness Galaxy',
    'LowSurfBrghtG': 'Low–Surface Brightness Galaxy',
    'ISM': 'Interstellar Medium (Nebula)',
    'GroupG': 'Group of Galaxies',
    'Star': 'Star',
    '**': 'Double (or Multiple) Star',
    'gLe': 'Gravitational Lens',
    'GravLens': 'Gravitational Lens',
    'gLS': 'Gravitational Lensing System',
    'GravLensSystem': 'Gravitational Lensing System',
    'G?': 'Possible Galaxy',
    'C?G': 'Possible Cluster of Galaxies',
    'CGG': 'Compact Group of Galaxies',
    '*Ass': 'Stellar Association',
    'As*': 'Stellar Association',
    'YSO_Candidate': 'Young Stellar Object (candidate)',
    'PaG': 'Pair of Galaxies',
    'PofG': 'Part of a Galaxy',
    'PoG': 'Part of a Galaxy',
    'PartofG': 'Part of a Galaxy',
    'SB*': 'Spectroscopic Binary',
    'PM*': 'High–Proper Motion Star',
    'StarburstG': 'Starburst Galaxy',
    'WR*': 'Wolf-Rayet Star',
    'WD*': 'White Dwarf',
    'pA*': 'Proto-Planetary Nebula',
    'V*': 'Variable Star',
    'GiC': 'Galaxy in a Cluster',
    'rG': 'Radio Galaxy',
    'GtowardsGroup': 'Galaxy towards a Group of Galaxies',
    'GtowardsCl': 'Galaxy towards a Cluster of Galaxies',
    'Cluster*': 'Cluster of Stars',
    'PlanetaryNeb': 'Planetary Nebula',
    'OpenCluster': 'Open Cluster',
    'GlobCluster': 'Globular Cluster',
    'AGN_Candidate': 'AGN Candidate',
    'RadioG': 'Radio Galaxy',
    'BrightestCG': 'Brightest Galaxy in a Cluster',
    'Seyfert2': 'Seyfert 2 Galaxy',
    'Seyfert1': 'Seyfert 1 Galaxy',
}


CONSTELLATIONS_CAMELCASE = {
    'AND': 'And',
    'ANT': 'Ant',
    'APS': 'Aps',
    'AQL': 'Aql',
    'AQR': 'Aqr',
    'ARA': 'Ara',
    'ARI': 'Ari',
    'AUR': 'Aur',
    'BOO': 'Boo',
    'CAE': 'Cae',
    'CAM': 'Cam',
    'CAP': 'Cap',
    'CAR': 'Car',
    'CAS': 'Cas',
    'CEN': 'Cen',
    'CEP': 'Cep',
    'CET': 'Cet',
    'CHA': 'Cha',
    'CIR': 'Cir',
    'CMA': 'CMa',
    'CMI': 'CMi',
    'CNC': 'Cnc',
    'COL': 'Col',
    'COM': 'Com',
    'CRA': 'CrA',
    'CRB': 'CrB',
    'CRT': 'Crt',
    'CRU': 'Cru',
    'CRV': 'Crv',
    'CVN': 'CVn',
    'CYG': 'Cyg',
    'DEL': 'Del',
    'DOR': 'Dor',
    'DRA': 'Dra',
    'EQU': 'Equ',
    'ERI': 'Eri',
    'FOR': 'For',
    'GEM': 'Gem',
    'GRU': 'Gru',
    'HER': 'Her',
    'HOR': 'Hor',
    'HYA': 'Hya',
    'HYI': 'Hyi',
    'IND': 'Ind',
    'LAC': 'Lac',
    'LEO': 'Leo',
    'LEP': 'Lep',
    'LIB': 'Lib',
    'LMI': 'LMi',
    'LUP': 'Lup',
    'LYN': 'Lyn',
    'LYR': 'Lyr',
    'MEN': 'Men',
    'MIC': 'Mic',
    'MON': 'Mon',
    'MUS': 'Mus',
    'NOR': 'Nor',
    'OCT': 'Oct',
    'OPH': 'Oph',
    'ORI': 'Ori',
    'PAV': 'Pav',
    'PEG': 'Peg',
    'PER': 'Per',
    'PHE': 'Phe',
    'PIC': 'Pic',
    'PSA': 'PsA',
    'PSC': 'Psc',
    'PUP': 'Pup',
    'PYX': 'Pyx',
    'RET': 'Ret',
    'SCL': 'Scl',
    'SCO': 'Sco',
    'SCT': 'Sct',
    'SER': 'Ser',
    'SEX': 'Sex',
    'SGE': 'Sge',
    'SGR': 'Sgr',
    'TAU': 'Tau',
    'TEL': 'Tel',
    'TRA': 'TrA',
    'TRI': 'Tri',
    'TUC': 'Tuc',
    'UMA': 'UMa',
    'UMI': 'UMi',
    'VEL': 'Vel',
    'VIR': 'Vir',
    'VOL': 'Vol',
    'VUL': 'Vul',
}

CONSTELLATIONS = {
    'AND': 'Andromeda',
    'ANT': 'Antlia',
    'APS': 'Apus',
    'AQL': 'Aquila',
    'AQR': 'Aquarius',
    'ARA': 'Ara',
    'ARI': 'Aries',
    'AUR': 'Auriga',
    'BOO': 'Boötes',
    'CAE': 'Caelum',
    'CAM': 'Camelopardalis',
    'CAP': 'Capricornus',
    'CAR': 'Carina',
    'CAS': 'Cassiopeia',
    'CEN': 'Centaurus',
    'CEP': 'Cepheus',
    'CET': 'Cetus',
    'CHA': 'Chameleon',
    'CIR': 'Circinus',
    'CMA': 'Canis Major',
    'CMI': 'Canis Minor',
    'CNC': 'Cancer',
    'COL': 'Columba',
    'COM': 'Coma Berenices',
    'CRA': 'Corona Australis',
    'CRB': 'Corona Borealis',
    'CRT': 'Crater',
    'CRU': 'Crux',
    'CRV': 'Corvus',
    'CVN': 'Canes Venatici',
    'CYG': 'Cygnus',
    'DEL': 'Delphinus',
    'DOR': 'Dorado',
    'DRA': 'Draco',
    'EQU': 'Equuleus',
    'ERI': 'Eridanus',
    'FOR': 'Fornax',
    'GEM': 'Gemini',
    'GRU': 'Grus',
    'HER': 'Hercules',
    'HOR': 'Horologium',
    'HYA': 'Hydra',
    'HYI': 'Hydrus',
    'IND': 'Indus',
    'LAC': 'Lacerta',
    'LEO': 'Leo',
    'LEP': 'Lepus',
    'LIB': 'Libra',
    'LMI': 'Leo Minor',
    'LUP': 'Lupus',
    'LYN': 'Lynx',
    'LYR': 'Lyra',
    'MEN': 'Mensa',
    'MIC': 'Microscopium',
    'MON': 'Monoceros',
    'MUS': 'Musca',
    'NOR': 'Norma',
    'OCT': 'Octans',
    'OPH': 'Ophiuchus',
    'ORI': 'Orion',
    'PAV': 'Pavo',
    'PEG': 'Pegasus',
    'PER': 'Perseus',
    'PHE': 'Phoenix',
    'PIC': 'Pictor',
    'PSA': 'Piscis Austrinus',
    'PSC': 'Pisces',
    'PUP': 'Puppis',
    'PYX': 'Pyxis',
    'RET': 'Reticulum',
    'SCL': 'Sculptor',
    'SCO': 'Scorpius',
    'SCT': 'Scutum',
    'SER': 'Serpens',
    'SEX': 'Sextans',
    'SGE': 'Sagitta',
    'SGR': 'Sagittarius',
    'TAU': 'Taurus',
    'TEL': 'Telescopium',
    'TRA': 'Triangulum Australe',
    'TRI': 'Triangulum',
    'TUC': 'Tucana',
    'UMA': 'Ursa Major',
    'UMI': 'Ursa Minor',
    'VEL': 'Vela',
    'VIR': 'Virgo',
    'VOL': 'Volans',
    'VUL': 'Vulpecula',
}

def make_constellation_map(enable: set):
    with open('ConstellationMap.html', 'r') as f:
        constellation_map = f.read();
        
    for constellation in enable:
        constellation = constellation.upper()
        abbrev = CONSTELLATIONS_CAMELCASE[constellation]
        full = CONSTELLATIONS[constellation]
        constellation_map = constellation_map.replace(f'<span class="constellation-anchor">{abbrev}</span>', f'<span class="constellation-anchor"><a href="#{full.lower().replace(" ", "-")}" title="{full}">{abbrev}</a></span>')

    return constellation_map

simbadification = OrderedDict([
    ('Collinder ', 'Cl Collinder '),
    ('simeis', 'Sim'),
    ('cgcg', 'Z'),
    ('agc', 'ACO'),
    ('minkowski 1-', 'PN M 1-'),
    ('minkowski 2-', 'PN M 2-'),
    ('minkowski 3-', 'PN M 3-'),
    ('minkowski 4-', 'PN M 4-'),
    ('minkowksi', 'Min'),
    ('m 1-', 'PN M 1-'),
    ('m 2-', 'PN M 2-'),
    ('b ', 'Barnard '),
    ('cr ', 'Collinder '),
    ('sh2 ', 'Sh2-'),
    ('sharpless ', 'Sh2-'),
    ('KTG', 'K79'),
    ('Hickson', 'HCG'),
    ('k ', 'PN K '),
    ('Cederblad', 'Ced'),
    ('RCG', 'ACO'),
    ('Rose ', '[R77] '),
])

desimbadification = OrderedDict([
    ('PN A66 ', 'Abell PN '),
    ('ACO ', 'Abell '),
    ('PN M ', 'Minkowski '),
    ('K79 ', 'KTG '),
    ('Cl ', ''),
    ('Sim ', 'Simeis '),
    ('Sh2', 'Sh 2'),
    ('SKHB ', 'M31-G'),
    ('Z ', 'CGCG '),
    ('[R77] ', 'Rose '),
])
